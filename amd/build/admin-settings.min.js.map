{"version":3,"file":"admin-settings.min.js","sources":["../src/admin-settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript functions to add/remove/orders a row of one html block entry\n * that contains three fields for the name of the block, the html for the\n * block and a possible category limitation. This is suited for and works\n * with the template setting_config_htmlblock.mustache only.\n *\n * @module      tiny_htmlblock\n * @copyright   2023 Stephan Robotta <stephan.robotta@bfh.ch>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n// Class names for the fa icons in the action menu.\nconst classDown = 'fa-arrow-down';\nconst classUp = 'fa-arrow-up';\nconst classAdd = 'fa-plus';\nconst classDel = 'fa-trash';\n// Count the rows during the init method and whenever a new row is added to avoid using the\n// same number twice when one row is deleted and another one is added. This would otherwise\n// cause the same name attribute for the input fields in two different rows.\nlet rowcount = 0;\n// Selector to find all rows for each html block configuration.\nconst selectorRows = '.row.htmlblock';\n\n/**\n * The add button that was clicked. This button is in the last row. Therefore, it creates\n * a clone of the entire row. In the cloned row we need to update the input elements (id and\n * name attribute -> increase the tailing sequence number by 1, empty any value attributes).\n * Also, in the cloned row the event must be attached to the icons.\n * For the existing row that was cloned, the icons must be adjusted (remove the + icon, add the\n * trash icon and the down icon).\n * @param {Node} row\n */\nconst insertRow = row => {\n  const newRow = row.cloneNode(true);\n  const parts = newRow.querySelector('input').getAttribute('name').split('_');\n  rowcount++;\n  const re = new RegExp('_' + parts[parts.length - 1] + '$');\n  newRow.querySelectorAll('input, textarea').forEach(input => {\n    ['name', 'id', 'value'].forEach(attr => {\n      if (attr === 'value') {\n        input.value = '';\n        return;\n      }\n      let content = input.getAttribute(attr).replace(re, '_' + rowcount.toString());\n      input.setAttribute(attr, content);\n    });\n  });\n  row.parentNode.insertBefore(newRow, row.nextSibling);\n  fixButtons(row);\n  fixButtons(newRow);\n  newRow.querySelectorAll('a').forEach(a => {\n    a.addEventListener('click', function(e) {\n      handleRow(e);\n    });\n  });\n};\n\n/**\n * Remove the current row with input field for name, textarea and category selector.\n * @param {Node} row\n */\nconst deleteRow = row => {\n  row.remove();\n  // Removing a row is usually no problem, only if the first row was deleted, the\n  // new first row needs to get the up button removed.\n  fixButtons(document.querySelector('.row.htmlblock'));\n};\n\n/**\n * Move a row up or down, e.g. swap position with its predecessor or successor.\n *\n * @param {Node} row\n * @param {string} dir\n */\nconst moveRow = (row, dir) => {\n  if (dir === 'up') {\n    row.parentNode.insertBefore(row, row.previousElementSibling);\n    fixButtons(row.nextElementSibling);\n  } else {\n    row.parentNode.insertBefore(row.nextElementSibling, row);\n    fixButtons(row.previousElementSibling);\n  }\n  fixButtons(row);\n\n};\n\n/**\n * Handle the click on any of the icons in a row of one html block configuration.\n * @param {Event} event\n */\nconst handleRow = event => {\n  event.preventDefault();\n  const row = event.target.parentNode.parentNode.parentNode.parentNode;\n  if (event.target.classList.contains(classDel)) {\n    deleteRow(row);\n  } else if (event.target.classList.contains(classAdd)) {\n    insertRow(row);\n  } else if (event.target.classList.contains(classUp)) {\n    moveRow(row, 'up');\n  } else if (event.target.classList.contains(classDown)) {\n    moveRow(row, 'down');\n  }\n};\n\n/**\n * Whenever a row has been moved added or deleted, the action icons of the\n * row itself and the adjacent row must be adjusted, e.g. if a row is moved up and\n * is on first position, the up arrow must be hidden.\n * @param {Node} row\n */\nconst fixButtons = row => {\n  // Get a list of all existing rows.\n  const rows = document.querySelectorAll(selectorRows);\n  // And find out at with position the current row is located at.\n  let i = 0;\n  for (i; i < rows.length; i++) {\n    if (rows[i] === row) {\n      break;\n    }\n  }\n  // Fix the buttons:\n  // - the first row has no up button.\n  // - the last row has an add button while all other rows have a delete button.\n  // - the last row also has no down button.\n  row.querySelectorAll('a > i.fa').forEach(e => {\n    if (e.classList.contains(classDown)) {\n      if (i < rows.length - 1) {\n        e.parentNode.classList.remove('hidden');\n      } else {\n        e.parentNode.classList.add('hidden');\n      }\n    } else if (e.classList.contains(classUp)) {\n      if (i > 0) {\n        e.parentNode.classList.remove('hidden');\n      } else {\n        e.parentNode.classList.add('hidden');\n      }\n    } else if (e.classList.contains(classAdd)) {\n      if (i === rows.length - 1) {\n        e.parentNode.classList.remove('hidden');\n      } else {\n        e.parentNode.classList.add('hidden');\n      }\n    } else if (e.classList.contains(classDel)) {\n      if (i === rows.length - 1) {\n        e.parentNode.classList.add('hidden');\n      } else {\n        e.parentNode.classList.remove('hidden');\n      }\n    }\n  });\n};\n\n/**\n * Initialize event handlers for all buttons inside the input fields for one item.\n * @param {string} name of settings field, for which the js handling is needed.\n */\nexport const init = name => {\n  const root = document.querySelector('.' + name);\n  if (!root) {\n    return;\n  }\n  const buttons = root.getElementsByTagName('a');\n  for (let i = 0; i < buttons.length; i++) {\n    buttons.item(i).addEventListener('click', function(e) {\n      handleRow(e);\n    });\n  }\n  rowcount = document.querySelectorAll(selectorRows).length;\n  document.head.appendChild(document.createElement('style')).textContent = `\n    .row.htmlblock {\n      padding-bottom: 0.5rem;\n    }\n    .row.htmlblock:nth-of-type(2n+1) {\n      border-top: 1px solid #dee2e6;\n      border-bottom: 1px solid #dee2e6;\n      background-color: rgba(0,0,0,.03);\n    }\n  `;\n};"],"names":["rowcount","moveRow","row","dir","parentNode","insertBefore","previousElementSibling","fixButtons","nextElementSibling","handleRow","event","preventDefault","target","classList","contains","remove","document","querySelector","deleteRow","newRow","cloneNode","parts","getAttribute","split","re","RegExp","length","querySelectorAll","forEach","input","attr","value","content","replace","toString","setAttribute","nextSibling","a","addEventListener","e","insertRow","rows","i","add","name","root","buttons","getElementsByTagName","item","head","appendChild","createElement","textContent"],"mappings":"wJAkCIA,SAAW,QAuDTC,QAAU,CAACC,IAAKC,OACR,OAARA,KACFD,IAAIE,WAAWC,aAAaH,IAAKA,IAAII,wBACrCC,WAAWL,IAAIM,sBAEfN,IAAIE,WAAWC,aAAaH,IAAIM,mBAAoBN,KACpDK,WAAWL,IAAII,yBAEjBC,WAAWL,MAQPO,UAAYC,QAChBA,MAAMC,uBACAT,IAAMQ,MAAME,OAAOR,WAAWA,WAAWA,WAAWA,WACtDM,MAAME,OAAOC,UAAUC,SA9EZ,YA8CCZ,CAAAA,MAChBA,IAAIa,SAGJR,WAAWS,SAASC,cAAc,oBA6BhCC,CAAUhB,KACDQ,MAAME,OAAOC,UAAUC,SAjFnB,WAkBCZ,CAAAA,YACViB,OAASjB,IAAIkB,WAAU,GACvBC,MAAQF,OAAOF,cAAc,SAASK,aAAa,QAAQC,MAAM,KACvEvB,iBACMwB,GAAK,IAAIC,OAAO,IAAMJ,MAAMA,MAAMK,OAAS,GAAK,KACtDP,OAAOQ,iBAAiB,mBAAmBC,SAAQC,SAChD,OAAQ,KAAM,SAASD,SAAQE,UACjB,UAATA,iBACFD,MAAME,MAAQ,QAGZC,QAAUH,MAAMP,aAAaQ,MAAMG,QAAQT,GAAI,IAAMxB,SAASkC,YAClEL,MAAMM,aAAaL,KAAME,eAG7B9B,IAAIE,WAAWC,aAAac,OAAQjB,IAAIkC,aACxC7B,WAAWL,KACXK,WAAWY,QACXA,OAAOQ,iBAAiB,KAAKC,SAAQS,IACnCA,EAAEC,iBAAiB,SAAS,SAASC,GACnC9B,UAAU8B,UA4CZC,CAAUtC,KACDQ,MAAME,OAAOC,UAAUC,SApFpB,eAqFZb,QAAQC,IAAK,MACJQ,MAAME,OAAOC,UAAUC,SAvFlB,kBAwFdb,QAAQC,IAAK,SAUXK,WAAaL,YAEXuC,KAAOzB,SAASW,iBA3FH,sBA6Ffe,EAAI,OACAA,EAAID,KAAKf,QACXe,KAAKC,KAAOxC,IADOwC,KASzBxC,IAAIyB,iBAAiB,YAAYC,SAAQW,IACnCA,EAAE1B,UAAUC,SAjHF,iBAkHR4B,EAAID,KAAKf,OAAS,EACpBa,EAAEnC,WAAWS,UAAUE,OAAO,UAE9BwB,EAAEnC,WAAWS,UAAU8B,IAAI,UAEpBJ,EAAE1B,UAAUC,SAtHX,eAuHN4B,EAAI,EACNH,EAAEnC,WAAWS,UAAUE,OAAO,UAE9BwB,EAAEnC,WAAWS,UAAU8B,IAAI,UAEpBJ,EAAE1B,UAAUC,SA3HV,WA4HP4B,IAAMD,KAAKf,OAAS,EACtBa,EAAEnC,WAAWS,UAAUE,OAAO,UAE9BwB,EAAEnC,WAAWS,UAAU8B,IAAI,UAEpBJ,EAAE1B,UAAUC,SAhIV,cAiIP4B,IAAMD,KAAKf,OAAS,EACtBa,EAAEnC,WAAWS,UAAU8B,IAAI,UAE3BJ,EAAEnC,WAAWS,UAAUE,OAAO,6BAUlB6B,aACZC,KAAO7B,SAASC,cAAc,IAAM2B,UACrCC,kBAGCC,QAAUD,KAAKE,qBAAqB,SACrC,IAAIL,EAAI,EAAGA,EAAII,QAAQpB,OAAQgB,IAClCI,QAAQE,KAAKN,GAAGJ,iBAAiB,SAAS,SAASC,GACjD9B,UAAU8B,MAGdvC,SAAWgB,SAASW,iBAnJD,kBAmJgCD,OACnDV,SAASiC,KAAKC,YAAYlC,SAASmC,cAAc,UAAUC"}